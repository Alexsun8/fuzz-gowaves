
// Code generated by go114-fuzz-build; DO NOT EDIT.

// +build ignore
// MH_SUBSECTIONS_VIA_SYMBOLS=1

package main_i

import (
	target "github.com/wavesplatform/gowaves/fuzz-WE"
	"unsafe"
)

// #include <stdint.h>
import "C"

//export LLVMFuzzerInitialize
func LLVMFuzzerInitialize() {
	//func LLVMFuzzerInitialize(argc *C.int, argv ***C.char) {
	target.NodeInitForFuzz();
	//return 0;
}

//export LLVMFuzzerTestOneInput
func LLVMFuzzerTestOneInput(data *C.char, size C.size_t) C.int {
	// TODO(mdempsky): Use unsafe.Slice once golang.org/issue/19367 is accepted.
	s := (*[1<<30]byte)(unsafe.Pointer(data))[:size:size]
	//defer catchPanics()
	target.FuzzTransactionsBroadcast(s)
	return 0
}
//
//func catchPanics() {
//	if r := recover(); r != nil {
//		var err string
//		switch r.(type) {
//		case string:
//			err = r.(string)
//		case runtime.Error:
//			err = r.(runtime.Error).Error()
//		case error:
//			err = r.(error).Error()
//		}
//		if strings.Contains(err, "GO-FUZZ-BUILD-PANIC") {
//			return
//		} else {
//			panic(err)
//		}
//	}
//}

func main() {
}
